import Head from 'next/head'
import ax from 'axios';
import Footer from '@/comps/Footer'
import { useRouter } from 'next/router';
import { useState, useEffect } from 'react'
import Nav from '@/comps/Nav'
import BookCard from '@/comps/BookCard'
import Switch from '@/comps/Switch'
import { comp_theme, text_theme ,order_method} from '../../utils/variables'
import { useTheme,useUser,useOrder } from '../../utils/provider'
const filter = [
  { label: 'BookTitle' },
  { label: 'Author' },
  { label: 'ISBN' },
  { label: 'Year_Publish' }
];
let timer = null;
export default function Bookshelf({

}) {
  const {order} = useOrder();
  const [value, setValue] = useState(filter[0]);
  const { theme } = useTheme();
  const { user } = useUser();
  const router = useRouter();
  const [data, setData] = useState([]);
  const [publish,setPublish]=useState(false)
  console.log("user",user.username)
  const searchTitle = async (txt) => {
    console.log(txt)
    if (timer) {
      clearTimeout(timer);
      timer = null
    }
    if (timer===null){
      timer= setTimeout(async()=>{
        console.log(value)
        console.log("async call!!!")
        const res = await ax.get("/api/books_search",{
          params:{
          txt:txt,
           sort_type:order_method[order]?.label,
          pub_year:publish,
          
          }
        })
        console.log(res.data);
        setData(res.data);
        timer=null;
      },1500)
    }
  }
  const searchAuthor = async (people) => {
    console.log(people)
    if (timer) {
      clearTimeout(timer);
      timer = null
    }
    if (timer===null){
      timer= setTimeout(async()=>{
        console.log(value)
        console.log("async call!!!")
        const res = await ax.get("/api/books_search",{
          params:{
            people:people,
           sort_type:order_method[order]?.label,
           pub_year:publish,
          
          }
        })

        console.log(res.data);
        setData(res.data);
        timer=null;
      },1500)
    }
  }
  const searchPublishYear = async (year) => {
    console.log(year)
    if (timer) {
      clearTimeout(timer);
      timer = null
    }
    if (timer===null){
      timer= setTimeout(async()=>{
        console.log(value)
        console.log("async call!!!")
        const res = await ax.get("/api/books_search",{
          params:{
            year:year,
           sort_type:order_method[order]?.label,
           pub_year:publish,
          
          }
        })
        console.log(res.data);
        setData(res.data);
        timer=null;
      },1500)
    }
  }
  const searchISBN = async (num) => {
    console.log(num)
    if (timer) {
      clearTimeout(timer);
      timer = null
    }
    if (timer===null){
      timer= setTimeout(async()=>{
        console.log(value)
        console.log("async call!!!")
        const res = await ax.get("/api/books_search",{
          params:{
            num:num,
           sort_type:order_method[order]?.label,
           pub_year:publish,
          
          }
        })
        console.log(res.data);
        setData(res.data);
        timer=null;
      },1500)
    }
  }
  const OffSort=()=>{
    setPublish(!publish)
  }
  return <div>
    <Head>
      <title>bookShelf</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <div className='B_Wrapper'>
      <div className='B_Container' >
      
        <div className='B_Nav'>
          {value.label=="Author"?
          <Nav 
          users={user.username}
          onChange={(e) => searchAuthor(e.target.value)}
          options={filter} 
          placeholder="Search for a author"
          value={value}
          onValueChange={(event, newValue) => {
            setValue(newValue);
          }}
          /> : null}
          {value.label=="ISBN"?
          <Nav 
          users={user.username}
          onChange={(e) => searchISBN(e.target.value)}
          options={filter} 
          placeholder="Search for an ISBN"
          value={value}
          onValueChange={(event, newValue) => {
            setValue(newValue);
          }}
          /> : null}
          {value.label=="BookTitle"?
          
          <Nav 
          users={user.username}
          onChange={(e) => searchTitle(e.target.value)}
          options={filter} 
          placeholder="Search for a  booktitle"
          value={value}
          onValueChange={(event, newValue) => {
            setValue(newValue);
          }}
          /> :null}
          {value.label=="Year_Publish"?
          <Nav 
          users={user.username}
          onChange={(e) => searchPublishYear(e.target.value)}
          options={filter} 
          placeholder="Search for YearPublish"
          value={value}
          onValueChange={(event, newValue) => {
            setValue(newValue);
          }}
          /> :null}
        </div>
        <div className='B_Content' >
          <div className='Side_Bar'>
            <div className='Pannel' style={{
              background: comp_theme[theme].label,
              color: text_theme[theme].label
            }}>
              <a onClick={() => router.push('/bookShelf')} > BookShelf</a>
              <a onClick={() => router.push('/comments')} > Comments</a>
              <a> Friends</a>
              <a> Clubs</a>
              <a> Subscription</a>
            </div>
          </div>
          <div className='Feed_Area' style={{ color: text_theme[theme].title }}>
            <div className='Drawers' >
              <div className='label' >
                <h3 > Search result</h3>
              </div>
              <div className='Drawer_search'>
                
                {(data===[]) ? <h4> There is no result.</h4>:
               ( data.map((o, i) =>
                  <BookCard key={i}
                    onClick={() => router.push(`/bookShelf/${o._id}`)}
                    src={o.image_s}
                    title={o.title.substr(0, 20) + "..."}
                    BookAuthor={o.author}
                    YearOfPublication={o.pub_year}
                  />
                )) 
              
              }

              </div>
              {/* <MyButton onClick={()=>GetBooks()}>1</MyButton> */}
            </div>
          


            

          </div>

        </div>




        <Footer />

      </div>
    </div>
  </div>


}
